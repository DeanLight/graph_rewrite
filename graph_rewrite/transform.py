# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/07_transform.ipynb.

# %% auto 0
__all__ = ['Rule', 'rewrite_match']

# %% ../nbs/07_transform.ipynb 4
from networkx import DiGraph
from .result_set import *
from typing import *

# %% ../nbs/07_transform.ipynb 6
class Rule:
    def __init__(self, lhs: DiGraph, rhs: DiGraph):
        self.lhs = lhs
        self.rhs = rhs
        self.p = None # TODO: change

        self.p_to_lhs = {}
        self.p_to_rhs = {}

    def nodes_to_add(self):
        pass

    def edges_to_add(self):
        pass

    def nodes_to_remove(self):
        pass

    def edges_to_remove(self):
        pass

    def nodes_to_clone(self):
        pass

    def nodes_to_merge(self):
        pass

# %% ../nbs/07_transform.ipynb 8
# check out regraph files: regraph/graphs.py, regraph/rules.py, regraph/utils.py

def rewrite_match(match: Match, input: DiGraph, p_pattern: DiGraph, rhs_pattern: DiGraph):
  # clone nodes (including their edges and attributes)
  # delete nodes and preserve others
  # delete edges
  # remove node attributes
  # remove edge attributes
  # merge nodes
  # add nodes
  # add edges
  # add node attributes
  # add edge attributes
  pass
